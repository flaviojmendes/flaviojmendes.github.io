{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/templates/blog-post.js"],"names":["Bio","useStaticQuery","site","siteMetadata","author","social","className","xs","md","name","summary","BlogPostTemplate","data","pageContext","location","post","markdownRemark","siteTitle","title","previous","next","frontmatter","description","excerpt","style","marginBottom","display","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","pageQuery"],"mappings":"6FAAA,yEAkDeA,IApCH,WACV,IADgB,EACHC,yBAAe,cAuBIC,KAAKC,aAA7BC,EAxBQ,EAwBRA,OAxBQ,EAwBAC,OAChB,OACE,kBAAC,IAAD,CAAKC,UAAW,WACd,kBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,IACjB,uBAAGF,UAAW,OAAd,cACa,gCAASF,EAAOK,MAD7B,IAC6CL,EAAOM,a,kCC3C1D,0HA+EeC,UAxEU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAGvCC,EAAOH,EAAKI,eACZC,EAAYL,EAAKV,KAAKC,aAAae,MACjCC,EAAmBN,EAAnBM,SAAUC,EAASP,EAATO,KAElB,OACE,kBAAC,IAAD,CAAQN,SAAUA,EAAUI,MAAOD,GACjC,kBAAC,IAAD,CACEC,MAAOH,EAAKM,YAAYH,MACxBI,YAAaP,EAAKM,YAAYC,aAAeP,EAAKQ,UAEpD,kBAAC,IAAD,MAEA,iCACE,gCACE,wBAAIjB,UAAS,cACXkB,MAAO,CACLC,aAAc,SAGfV,EAAKM,YAAYH,OAEpB,uBACEM,MAAO,CACLE,QAAQ,UAGTX,EAAKM,YAAYM,OAGtB,6BAAUrB,UAAS,yBAA4BsB,wBAAyB,CAAEC,OAAQd,EAAKe,QACvF,wBACEN,MAAO,KAGT,gCACE,kBAAC,IAAD,QAIJ,6BACE,wBACEA,MAAO,CACLE,QAAQ,OACRK,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGf,GACC,kBAAC,OAAD,CAAMgB,GAAIhB,EAASiB,OAAOC,KAAMC,IAAI,QAApC,KACKnB,EAASE,YAAYH,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAMe,GAAIf,EAAKgB,OAAOC,KAAMC,IAAI,QAC7BlB,EAAKC,YAAYH,MADpB,WAaP,IAAMqB,EAAS","file":"component---src-templates-blog-post-js-6e2ceb9534905b439c57.js","sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Image from \"gatsby-image\"\r\nimport Row from \"react-bootstrap/Row\"\r\nimport Col from \"react-bootstrap/Col\"\r\n\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\r\n        childImageSharp {\r\n          fixed(width: 50, height: 50) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const { author, social } = data.site.siteMetadata\r\n  return (\r\n    <Row className={'row-bio'}>\r\n      <Col xs={12} md={12}>\r\n      <p className={'bio'}>\r\n        Written by <strong>{author.name}</strong> {author.summary}\r\n      </p>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\r\n\r\n\r\n  const post = data.markdownRemark\r\n  const siteTitle = data.site.siteMetadata.title\r\n  const { previous, next } = pageContext\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO\r\n        title={post.frontmatter.title}\r\n        description={post.frontmatter.description || post.excerpt}\r\n      />\r\n      <Bio />\r\n\r\n      <article>\r\n        <header>\r\n          <h1 className={`text-center`}\r\n            style={{\r\n              marginBottom: '10px',\r\n            }}\r\n          >\r\n            {post.frontmatter.title}\r\n          </h1>\r\n          <p\r\n            style={{\r\n              display: `block`,\r\n            }}\r\n          >\r\n            {post.frontmatter.date}\r\n          </p>\r\n        </header>\r\n        <section  className={`text-justify blog-post`} dangerouslySetInnerHTML={{ __html: post.html }} />\r\n        <hr\r\n          style={{\r\n          }}\r\n        />\r\n        <footer>\r\n          <Bio />\r\n        </footer>\r\n      </article>\r\n\r\n      <nav>\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}